{"version":3,"sources":["services/api.js","components/menu.js","components/home.js","components/share-movie.js","components/private-component.js","App.js","serviceWorker.js","store/reducer.js","store/index.js","index.js"],"names":["makeRequest","method","endPoint","data","a","token","localStorage","getItem","fetch","body","JSON","stringify","headers","res","status","removeItem","Promise","reject","json","login","shareMovie","videoId","Menu","props","state","username","password","alert","showLoading","finally","hideLoading","then","setItem","catch","err","onChangeUsername","e","setState","target","value","onChangePassword","logout","this","isLogin","className","to","icon","faHome","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","onClick","onChange","placeholder","React","Component","connect","ownProps","user","dispatch","Home","setLoading","isLoading","renderLoading","color","renderMovies","opts","height","width","playerVars","autoplay","origin","process","APP_URL","movies","map","movie","index","key","YouTube","title","likeCount","faThumbsUp","dislikeCount","faThumbsDown","description","ShareMovie","onChangeUrl","url","gotoHome","onShare","matchResult","match","Error","component","rest","render","pathname","from","location","App","exact","path","loadingBar","Boolean","window","hostname","combineReducers","action","store","createStore","rootReducer","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a8adcf10.chunk.js","sourcesContent":["const baseUrl = \"http://localhost:5000/api/\";\n\nconst makeRequest = async (method, endPoint, data) => {\n  const token = localStorage.getItem('token');\n  const res = await fetch(baseUrl + endPoint, {\n    method,\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-Type\" : \"application/json; charset=utf-8\",\n      \"Authorization\" : token\n    }\n  });\n\n  if (res.status === 404) {\n    localStorage.removeItem('token');\n    return Promise.reject();\n  }\n\n  return await res.json();\n}\nexport const login = (data) => {\n  return makeRequest('post', 'users/login', data);\n}\n\nexport const getUserInfo = () => {\n  return makeRequest('get', 'users/access-info');\n}\n\nexport const getMovies = () => {\n  return makeRequest('get', 'movies');\n}\n\nexport const shareMovie = (videoId) => {\n  return makeRequest('get', 'movies/share/' + videoId);\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { login, getUserInfo } from '../services/api';\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHome } from '@fortawesome/free-solid-svg-icons'\nimport { argumentPlaceholder } from '@babel/types';\n\nclass Menu extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\"\n    }\n  }\n\n  login = () => {\n    const { username, password } = this.state;\n    if (!username || !password) {\n      return alert('Missing field!');\n    }\n    this.props.showLoading();\n    const body = {\n      username,\n      password\n    }\n    login(body)\n    .finally(() => {\n      this.props.hideLoading();\n    })\n    .then((res) => {\n      if (res.token) {\n        localStorage.setItem('token', res.token);\n        this.props.login(res.username);\n      }\n    }).catch(err => {\n      alert(\"Login fail! Please check your info.\");\n    })\n  }\n\n  componentWillMount() {\n    if (!localStorage.getItem('token')) return;\n    this.props.showLoading();\n    getUserInfo()\n    .finally(() => {\n      this.props.hideLoading();\n    })\n    .then(res => {\n      if (res.username) {\n        this.props.login(res.username);\n      }\n    })\n  }\n\n  onChangeUsername = (e) => {\n    this.setState({username: e.target.value});\n  }\n\n  onChangePassword = (e) => {\n    this.setState({password: e.target.value});\n  }\n\n  logout = () => {\n    this.props.logout();\n  }\n\n  render() {\n    const { isLogin, username } = this.props;\n    return (\n      <div className=\"App\">\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n          <Link className=\"navbar-brand\" to=\"/\">\n            <FontAwesomeIcon icon={faHome}/>\n            <span className=\"ml-2\">Funny Movies</span>\n          </Link>\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo02\" aria-controls=\"navbarTogglerDemo02\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n\n          <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\n            <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n            </ul>\n              {!isLogin ? (\n                <div className=\"form-inline my-2 my-lg-0\">\n                  <input className=\"form-control mr-sm-2\" value={this.state.username} onChange={this.onChangeUsername} type=\"username\" placeholder=\"Username\"/>\n                  <input className=\"form-control mr-sm-2\" value={this.state.password} onChange={this.onChangePassword} type=\"password\" placeholder=\"Password\"/>\n                  <button className=\"btn btn-outline-success my-2 my-sm-0\" onClick={this.login}>Login/Register</button>\n                </div>\n              ) : (\n                <div className=\"form-inline my-2 my-lg-0\">\n                  <label className=\"label mr-5\"> Welcome {username}</label>\n                  <Link className=\"btn btn-outline-success my-2 my-sm-0 mr-5\" to=\"/share-movie\">Share a movie</Link>\n                  <button className=\"btn btn-outline-success my-2 my-sm-0\" onClick={this.logout}>Logout</button>\n                </div>    \n              )}\n          </div>\n        </nav>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    username: state.user.username,\n    isLogin: state.user.isLogin\n  }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  logout: () => dispatch({\n    type: \"LOGOUT\"\n  }),\n  login: (data) => dispatch({\n    type: \"LOGIN\",\n    data\n  }),\n  showLoading: () => dispatch({\n    type: 'SHOW_LOADING'\n  }),\n  hideLoading: () => dispatch({\n    type: 'HIDE_LOADING'\n  })\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Menu)","import React from 'react';\nimport { getMovies } from '../services/api';\nimport YouTube from 'react-youtube';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-regular-svg-icons';\nimport Loader from 'react-loader-spinner';\n\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movies: [],\n      isLoading: false\n    }\n  }\n\n  componentWillMount() {\n    this.setLoading(true);\n    getMovies().then(data => {\n      this.setState({\n        movies: data\n      })\n    }).finally(() => {\n      this.setLoading(false);\n    })\n  }\n\n  setLoading = (value) => {\n    this.setState({\n      isLoading: value\n    })\n  }\n\n  renderLoading = () => {\n    const { isLoading } = this.state;\n    if (!isLoading) {\n      return;\n    }\n    return (\n      <div className=\"loading-bar\">\n        <Loader\n          type=\"ThreeDots\"\n          color=\"#00BFFF\"\n          className=\"loading\"\n        />\n      </div>\n    )\n  }\n\n  renderMovies = () => {\n    const opts = {\n      height: '360',\n      width: '100%',\n      playerVars: {\n        autoplay: 0\n      },\n      origin: process.env.APP_URL | \"http://localhost:3000\"\n    };\n    return this.state.movies.map((movie, index) => {\n      return (\n        <div className=\"row mt-3\" key={index}>\n          <div className=\"col-md-6\">\n            <YouTube\n              videoId={movie.videoId}\n              opts={opts}\n            />\n          </div>\n          <div className=\"col-md-6 movie-item\">\n            <label className=\"col\"><span className=\"badge badge-danger movie-title\">{movie.title}</span></label>\n            <label className=\"col\">Share by: {movie.user.username}</label>\n            <div className=\"col\">\n              <label className=\"mr-3\"><span className=\"badge badge-primary\">{movie.likeCount} <FontAwesomeIcon icon={faThumbsUp}/></span></label>\n              <label><span className=\"badge badge-secondary\">{movie.dislikeCount} <FontAwesomeIcon icon={faThumbsDown}/></span></label>\n            </div>\n            <label className=\"col\">Description:</label>\n            <label className=\"col\">{movie.description}</label>\n          </div>\n        </div>\n      )\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"container movies-list\">\n        {this.renderMovies()}\n        {this.renderLoading()}\n      </div>\n    )\n  }\n}","import React from 'react';\nimport { shareMovie } from '../services/api';\nimport { connect } from 'react-redux';\nimport {\n  Redirect\n} from 'react-router-dom'\n\nclass ShareMovie extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      url: \"\",\n      gotoHome: false\n    }\n  }\n\n  onChangeUrl = (e) => {\n    this.setState({\n      url: e.target.value\n    })\n  }\n\n  shareMovie = (videoId) => {\n    this.props.showLoading();\n    shareMovie(videoId)\n    .finally(() => {\n      this.props.hideLoading();\n    })\n    .then(() => {\n      this.setState({\n        gotoHome: true\n      });\n    }).catch(() => {\n      this.setState({\n        url: \"\"\n      });\n      alert(\"Cannot find your video. Please check it and retry!\")\n    })\n  }\n\n  onShare = () => {\n    try {\n      const VID_REGEX = /(?:youtube(?:-nocookie)?\\.com\\/(?:[^\\/\\n\\s]+\\/\\S+\\/|(?:v|e(?:mbed)?)\\/|\\S*?[?&]v=)|youtu\\.be\\/)([a-zA-Z0-9_-]{11})/\n      const matchResult = this.state.url.match(VID_REGEX);\n      const [, videoId] = matchResult;\n      if (!videoId) {\n        throw new Error();\n      }\n      this.shareMovie(videoId);\n    } catch(err) {\n      this.setState({\n        url: \"\"\n      });\n      alert(\"Cannot find your video id. Please check it and retry!\")\n    }\n  }\n\n  render() {\n    if (this.state.gotoHome) {\n      return (\n        <Redirect to=\"/\"/>\n      )\n    }\n    return (\n      <div className=\"container mt-5 border border-dark rounded col-md-8 col-md-offset-2\">\n        <h2>Share a youtube movie</h2>\n        <div className=\"form-group row\">\n          <label className=\"col-sm-2 col-form-label\">Youtube URL</label>\n          <div className=\"col-sm-10\">\n            <input type=\"text\" className=\"form-control\" placeholder=\"Youtube URL\" value={this.state.url} onChange={this.onChangeUrl}/>\n          </div>\n        </div>\n        <div className=\"form-group row\">\n          <label className=\"col-sm-2 col-form-label\"></label>\n          <div className=\"col-sm-10\">\n            <button className=\"col btn btn-success\" onClick={this.onShare}>Share</button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    isLogin: state.user.isLogin\n  }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  showLoading: () => dispatch({\n    type: 'SHOW_LOADING'\n  }),\n  hideLoading: () => dispatch({\n    type: 'HIDE_LOADING'\n  })\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ShareMovie)","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect, Route } from \"react-router-dom\";\n\nfunction PrivateRoute({ component: Component, ...rest }) {\n  const { isLogin } = rest;\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        isLogin ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/\",\n              state: { from: props.location }\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    isLogin: state.user.isLogin\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(PrivateRoute)","import React from 'react';\nimport Menu from './components/menu';\nimport Home from './components/home';\nimport ShareMovie from './components/share-movie';\nimport Private from './components/private-component';\n\nimport Loader from 'react-loader-spinner';\nimport { connect } from 'react-redux';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport './App.css';\n\nclass App extends React.Component{\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    const { isLoading } = this.props;\n    return (\n      <Router>\n        {isLoading ? (\n          <div className=\"loading-bar\">\n            <Loader\n              type=\"Rings\"\n              color=\"#00BFFF\"\n              className=\"loading\"\n            />\n          </div>\n        ) : \"\"}\n        <div>\n          <Menu />\n          <Route exact path=\"/\" component={Home} />\n          {/* <Route path=\"/share-movie\" component={ShareMovie} /> */}\n          <Private path=\"/share-movie\" component={ShareMovie}/>\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    isLoading: state.loadingBar.isLoading,\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const login = (state = {\n  isLogin: false,\n  username: \"\"\n}, action) => {\n  switch (action.type) {\n    case 'LOGIN':\n      return {\n        ...state,\n        username: action.data,\n        isLogin: true\n      }\n    case 'LOGOUT':\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        username: \"\",\n        isLogin: false\n      }\n    default:\n      return state\n  }\n}\n\nexport const loadingBar = (state = {\n  isLoading: false,\n}, action) => {\n  switch (action.type) {\n    case 'SHOW_LOADING':\n      return {\n        ...state,\n        isLoading: true,\n      }\n    case 'HIDE_LOADING':\n        return {\n          ...state,\n          isLoading: false,\n        }\n    default:\n      return state\n  }\n}","import { combineReducers } from 'redux'\nimport { login, loadingBar } from './reducer'\n\nexport default combineReducers({user: login, loadingBar })","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport rootReducer from './store/index';\nconst store = createStore(rootReducer)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}